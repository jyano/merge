{
  "name": "us",
  "description": "A package for easily working with US and state metadata",
  "author": {
    "name": "Patrick Way",
    "email": "patrick@hexane.org"
  },
  "version": "1.0.3",
  "main": "us.js",
  "engines": {
    "node": ">= 0.4.1"
  },
  "readme": "javascript-us\n=============\n\nNPM module of US state metadata.  Heavily based on [python-us](https://github.com/unitedstates/python-us)\n\n* all US states and territories\n* postal abbreviations\n* Associated Press style abbreviations\n* FIPS codes\n* capitals\n* years of statehood\n* time zones\n* phonetic state name lookup\n* URLs to shapefiles for state, census, congressional districts,\n  counties, and census tracts\n\nInstallation\n------------\n\nAs per usual:\n\n    $ npm install us\n\nFeatures\n--------\n\nEasy access to state information:\n\n    > var us = require('us')\n    > us.states.MD\n    { name: 'Maryland',\n      name_metaphone: 'MRLNT',\n      statehood_year: 1788,\n      ap_abbr: 'Md.',\n      is_territory: false,\n      fips: '24',\n      abbr: 'MD',\n      capital: 'Annapolis',\n      capital_tz: 'America/New_York',\n      time_zones: [ 'America/New_York' ] }\n    > us.states.MD.fips\n    '24'\n    > us.states.MD.name\n    'Maryland'\n    > \n\nIncludes territories too:\n\n    > us.states.VI.name\n    'Virgin Islands'\n    > us.states.VI.is_territory\n    true\n    > us.states.MD.is_territory\n    false\n    > \n\nList of all (actual) states:\n\n    > us.STATES\n    [ { name: 'Alabama',\n        ... },\n      { name: 'Alaska',\n        ... }, ...\n    > us.TERRITORIES\n    [ { name: 'American Samoa',\n        ... },\n      { name: 'Guam',\n        ... }, ...\n\nAnd the whole shebang, if you want it:\n\n    > us.STATES_AND_TERRITORIES\n    [ { name: 'Alabama',\n        ... },\n      { name: 'Alaska',\n        ... }, ...\n      { name: 'American Samoa',\n        ... }, ...\n\nThe lookup method allows matching by FIPS code, abbreviation, and name:\n\n    > us.lookup('24')\n    { name: 'Maryland',\n      ... }\n    > us.lookup('MD')\n    { name: 'Maryland',\n      ... }\n    > us.lookup('md')\n    { name: 'Maryland',\n      ... }\n    > us.lookup('maryland')\n    { name: 'Maryland',\n      ... }\n    > \n\nAnd for those days that you just can't remember how to spell Mississippi,\nwe've got phonetic name matching too: ::\n\n    > us.lookup('misisipi')\n    { name: 'Mississippi'\n      ... }\n\n\nShapefiles\n----------\n\nYou want shapefiles too? Gotcha covered.\n\n    > us.states.MD.shapefile_urls()\n    { tract: 'http://www2.census.gov/geo/tiger/TIGER2010/TRACT/2010/tl_2010_24_tract10.zip',\n      cd: 'http://www2.census.gov/geo/tiger/TIGER2010/CD/111/tl_2010_24_cd111.zip',\n      county: 'http://www2.census.gov/geo/tiger/TIGER2010/COUNTY/2010/tl_2010_24_county10.zip',\n      state: 'http://www2.census.gov/geo/tiger/TIGER2010/STATE/2010/tl_2010_24_state10.zip',\n      zcta: 'http://www2.census.gov/geo/tiger/TIGER2010/ZCTA5/2010/tl_2010_24_zcta510.zip',\n      block: 'http://www2.census.gov/geo/tiger/TIGER2010/TABBLOCK/2010/tl_2010_24_tabblock10.zip',\n      blockgroup: 'http://www2.census.gov/geo/tiger/TIGER2010/BG/2010/tl_2010_24_bg10.zip' }\n\nThe `shapefile_urls()` method on the State object generates shapefile URLs for the following regions:\n\n* state\n* county\n* congressional district\n* zcta\n* census tract\n\nIf you know what region you want, you can explicitly request it:\n\n    > us.states.MD.shapefile_urls('county')\n    'http://www2.census.gov/geo/tiger/TIGER2010/COUNTY/2010/tl_2010_24_county10.zip'\n    \n\nMappings\n--------\n\nMappings between various state attributes are a common need. The `mapping()` method will generate a lookup between two specified fields.\n\n    > us.mapping('fips', 'abbr');\n    { '10': 'DE',\n      '11': 'DC', ...\n    > us.mapping('abbr', 'name')\n    { AL: 'Alabama',\n      AK: 'Alaska', ...\n\n\nContributing\n------------\n\nYour contributions are welcomed!\n\nCredits\n-------\n\n* Documentation, code, and pretty much everything heavily based off [python-us](https://github.com/unitedstates/python-us)\n* Ported to javascript by [Patrick Way](https://github.com/patsplat)\n* Contains [metaphone.js](https://github.com/kvz/phpjs/blob/master/functions/strings/metaphone.js) from [phpjs](https://github.com/kvz/phpjs)\n\nContributors to python-us:\n\n* [Paul Tagliamonte](http://github.com/paultag)\n* [Jeremy Carbaugh](http://github.com/jcarbaugh)\n",
  "readmeFilename": "README.md",
  "_id": "us@1.0.3",
  "_shasum": "79a78646223120b6ab076f7405f7049a2d120273",
  "_from": "us@",
  "_resolved": "https://registry.npmjs.org/us/-/us-1.0.3.tgz"
}
