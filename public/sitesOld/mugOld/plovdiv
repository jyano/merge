


makePath = function(ctx){

CLR(ctx);


var start = VX.shift();
    ctx.moveTo(start.x, start.y);
    _.each(VX, function(vertex, index, list){
        ctx.lineTo(vertex.x,vertex.y)});
        ctx.fill(); ctx.closePath();ctx.clip();
        imgCan(ctx, src)

}


            mixin ctx('ctx',650,650,'black')
            mixin ctx('clr',50,50,'yellow')
            mixin ctx('cut',50,50,'blue')
            script.
                src = pathToSrc(src);
                imgCan(ctx, src);
                vertex();
                $(ctx.canvas).click(function(e){addVertex(ctx,  ctx.mx(e.clientX), ctx.my(e.clientY))})


    a.p('/cutty', MW.lU, function(q,p,n){l('cty.p');


        d(q.files);

       l('path::::'); l(q.files.cutout.path);


       // fs.rename(path, path + '.png', function (err){ p.d('/cutty')});

        fs.readFile(q.files.cutout.path, function (err, data) {  d(q.files.cutout);

            var newPath = q.files.cutout.path + '.png'; l(newPath);
            fs.writeFile(newPath, data, function (err) { p.redirect("back"); });});


    })








var dragBox = new createjs.Shape(new createjs.Graphics().beginFill("#ff0000").drawRect(0,0,stage.canvas.width, stage.canvas.height));
dragBox.addEventListener("mousedown", startDrag);
stage.addChild(dragBox);

// Container to drag around
var dragContainer = new createjs.Container();
stage.addChild(dragContainer);

// Create lots of things on the stage.
var g = new createjs.Graphics().beginFill("#000000").drawCircle(0,0,50);
for (var i=0, l=300; i<l; i++) {
    var scale = Math.random() * 3 - 2.5;
    var box = new createjs.Shape(g)
    .set({scaleX:scale, scaleY: scale, alpha:Math.random()*0.5+0.5, x:Math.random() * 5000 - 2500, y:Math.random()*5000-2500});
    dragContainer.addChild(box);
}

// Drag
var offset = new createjs.Point();
function startDrag(event) {
    offset.x = stage.mouseX - dragContainer.x;
    offset.y = stage.mouseY - dragContainer.y;
    event.addEventListener("mousemove", doDrag);
}
function doDrag(event) {
    dragContainer.x = event.stageX - offset.x;
    dragContainer.y = event.stageY - offset.y;
}

// Update the stage
function tick(event) {
    stage.update();
}
     BUTTONS({flipX:function(){C.T(((i.w + 1)*(-1)),((-i.h + 1)*(-1)));C.R(Math.PI);D();},
                                                  flipY:function(){C.R(Math.PI/32);D();},
                                                              moveUp:function(){C.T(0,-50);D();},
                                                  moveDown:function(){C.T(0,50);D();},
                                                  moveLeft:function(){C.T(-50,0);D();},
                                                  moveRight:function(){C.T(50,0);D();},
                                                              rotateC:function(){C.R(rad(10));D();},
                                                  rotateCC:function(){C.R(-(rad(10)));D();},
                                                              smaller:function(){C.S(.9,.9);C.D(i,100,100,i.w,i.h);},
                                                  bigger:function(){C.S(1.3,1.3);C.D(i,0,0,i.w,i.h)}})})
                                            can.drawImage(ii, 0,0)


                                             mixin buts(['flipY','flipX', 'rotateC', 'rotateCC', 'moveLeft', 'moveRight', 'moveUp', 'moveDown', 'bigger', 'smaller'])
                                                            mixin buts(['grayscale','pixelate'], 1)

          mixin buts(['flipY','flipX', 'rotateC', 'rotateCC', 'moveLeft', 'moveRight', 'moveUp', 'moveDown', 'bigger', 'smaller'])
                        .col-md-1: h4 pixelize
                            mixin buts(['grayscale','pixelate'])